<?php
/**
 * @file
 *  Modules weight functionlity implementation.
 */

/**
 * Implements hook_menu().
 */
function modules_weight_menu() {
  $items = array();

  $items['admin/config/system/modules-weight'] = array(
    'title' => 'Modules Weight',
    'description' => 'Provide admin interface to order the modules execution.',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('modules_weight_admin_config_page_form'),
    'access arguments' => array('administer site configuration'),
  );

  return $items;
}

function modules_weight_admin_config_page_form($form, &$form_state) {

  $form['modules_weight']['#tree'] = TRUE;

  $result = db_select('system', 's')
    ->condition('s.type', 'module')
    ->condition('s.status', 1)
    ->fields('s', array('weight', 'info', 'name'))
    ->orderBy('weight', 'ASC')
    ->execute();

  foreach ($result as $module) {

    $info = unserialize($module->info);
    
    if ($info['package'] != 'Core') {
      $form['modules_weight'][$module->name] = array(

        'name' => array(
          '#markup' => t($info['name']),
        ),

        'description' => array(
          '#markup' => t($info['description']),
        ),

        'weight' => array(
          '#type' => 'weight',
          '#title' => t('Weight'),
          '#default_value' => $module->weight,
          '#delta' => 100,
          '#title-display' => 'invisible',
        ),

        'package' => array(
          '#markup' => t($info['package']),
        ),

      );
    }

  }

  $form['actions'] = array('#type' => 'actions');
  $form['actions']['submit'] = array('#type' => 'submit', '#value' => t('Save Changes'));
  return $form;
}

/**
 * Implements hook_theme().
 */
function modules_weight_theme() {
  return array(
    'modules_weight_admin_config_page_form' => array(
      'render element' => 'form',
    ),
  );
}

function theme_modules_weight_admin_config_page_form($variables) {
  $form = $variables['form'];

  $rows = array();

  foreach (element_children($form['modules_weight']) as $id) {

    $form['modules_weight'][$id]['weight']['#attributes']['class'] = array('module-weight');

    $rows[] = array(
      'data' => array(
        drupal_render($form['modules_weight'][$id]['name']),
        drupal_render($form['modules_weight'][$id]['description']),
        drupal_render($form['modules_weight'][$id]['weight']),
        drupal_render($form['modules_weight'][$id]['package']),
      ),
      'class' => array('draggable'),
    );
  }

  $header = array(t('Name'), t('Description'), t('Weight'), t('Package'));

  $table_id = 'module-items-table';

  $output = theme('table', array(
    'header' => $header,
    'rows' => $rows,
    'attributes' => array('id' => $table_id),
  ));

  $output .= drupal_render_children($form);

  drupal_add_tabledrag($table_id, 'order', 'sibling', 'module-weight');

  return $output;
}

/**
 * Submit callback for the modules_weight_admin_config_page_form form.
 *
 * Updates the 'weight' column for each module in our table, taking into
 * account that item's new order after the drag and drop actions have been
 * performed.
 */
function modules_weight_admin_config_page_form_submit($form, $form_state) {
  foreach ($form_state['values']['modules_weight'] as $name => $weight) {
    db_query(
      "UPDATE {system} SET weight = :weight WHERE name = :name",
      array(':weight' => $weight['weight'], ':name' => $name)
    );
  }
}